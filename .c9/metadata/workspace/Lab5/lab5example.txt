{"changed":true,"filter":false,"title":"lab5example.txt","tooltip":"/Lab5/lab5example.txt","value":"LAB 5 \n\n/*Lab solution\nlist_ptr_t list_insert_at_index( list_ptr_t list, element_ptr_t element, int index){\n  list_node_t* current_node = list_get_reference_at_index(list,index),\n  list_node_t* new_node = malloc(sizeof(list_node_t))\n  new_node->element = element;\n  new_node->next = current_node ->next;\n  new_node->prev = current_node\n  current_node ->next = new_node;\n  if(new_node->next != NULL){\n    new_node->next->prev = new_node;\n  }\n  return list;\n}*/\n\n//fout  V   //\n\n  list_node_ptr_t current_node = list_get_reference_at_index(list,index);\n  list_node_ptr_t new_node = malloc(sizeof(list_node_t));\n  if(new_node == NULL){\n    return NULL; //malloc fail\n  }\n  new_node->data = element;        // data wordt ergens fout geassigned\n  if(current_node == NULL){        //for an empty list\n    new_node->next = NULL;\n    new_node->prev = NULL;\n    list->first_node = new_node;\n    printf(\"First node= %d\\n\", list->first_node);\n  }\n  \n  else{                           //list already has elements\n    new_node->next = current_node;\n    new_node->prev = current_node->prev;\n    current_node ->prev = new_node;\n    if(new_node->next != NULL){\n      new_node->next->prev = new_node;\n    }\n    if(list->first_node == current_node){\n      list->first_node = new_node;\n    }\n  }\n  list->size++;\n  return list;","undoManager":{"mark":10,"position":35,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":12,"column":3},"action":"insert","lines":["/*Lab solution","list_ptr_t list_insert_at_index( list_ptr_t list, element_ptr_t element, int index){","  list_node_t* current_node = list_get_reference_at_index(list,index),","  list_node_t* new_node = malloc(sizeof(list_node_t))","  new_node->element = element;","  new_node->next = current_node ->next;","  new_node->prev = current_node","  current_node ->next = new_node;","  if(new_node->next != NULL){","    new_node->next->prev = new_node;","  }","  return list;","}*/"]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":3},"end":{"row":13,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":13,"column":0},"end":{"row":14,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["L"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"insert","lines":["A"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":2},"end":{"row":0,"column":3},"action":"insert","lines":["B"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":3},"end":{"row":0,"column":4},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":4},"end":{"row":0,"column":5},"action":"insert","lines":["5"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":5},"end":{"row":0,"column":6},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":16,"column":0},"end":{"row":17,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":17,"column":0},"end":{"row":18,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":0},"end":{"row":43,"column":14},"action":"insert","lines":["  list_node_ptr_t current_node = list_get_reference_at_index(list,index);","  list_node_ptr_t new_node = malloc(sizeof(list_node_t));","  if(new_node == NULL){","    return NULL; //malloc fail","  }","  new_node->data = element;        // data wordt ergens fout geassigned","  if(current_node == NULL){        //for an empty list","    new_node->next = NULL;","    new_node->prev = NULL;","    list->first_node = new_node;","    printf(\"First node= %d\\n\", list->first_node);","  }","  ","  else{                           //list already has elements","    new_node->next = current_node;","    new_node->prev = current_node->prev;","    current_node ->prev = new_node;","    if(new_node->next != NULL){","      new_node->next->prev = new_node;","    }","    if(list->first_node == current_node){","      list->first_node = new_node;","    }","  }","  list->size++;","  return list;"]}]}],[{"group":"doc","deltas":[{"start":{"row":16,"column":0},"end":{"row":16,"column":1},"action":"insert","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":16,"column":1},"end":{"row":16,"column":2},"action":"insert","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":16,"column":2},"end":{"row":16,"column":3},"action":"insert","lines":["f"]}]}],[{"group":"doc","deltas":[{"start":{"row":16,"column":3},"end":{"row":16,"column":4},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":16,"column":4},"end":{"row":16,"column":5},"action":"insert","lines":["u"]}]}],[{"group":"doc","deltas":[{"start":{"row":16,"column":5},"end":{"row":16,"column":6},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":16,"column":6},"end":{"row":16,"column":7},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":16,"column":7},"end":{"row":16,"column":8},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":16,"column":8},"end":{"row":16,"column":9},"action":"insert","lines":["-"]}]}],[{"group":"doc","deltas":[{"start":{"row":16,"column":8},"end":{"row":16,"column":9},"action":"remove","lines":["-"]}]}],[{"group":"doc","deltas":[{"start":{"row":16,"column":8},"end":{"row":16,"column":9},"action":"insert","lines":["V"]}]}],[{"group":"doc","deltas":[{"start":{"row":16,"column":9},"end":{"row":16,"column":10},"action":"insert","lines":["V"]}]}],[{"group":"doc","deltas":[{"start":{"row":16,"column":10},"end":{"row":16,"column":11},"action":"insert","lines":["V"]}]}],[{"group":"doc","deltas":[{"start":{"row":16,"column":11},"end":{"row":16,"column":12},"action":"insert","lines":["V"]}]}],[{"group":"doc","deltas":[{"start":{"row":16,"column":11},"end":{"row":16,"column":12},"action":"remove","lines":["V"]}]}],[{"group":"doc","deltas":[{"start":{"row":16,"column":10},"end":{"row":16,"column":11},"action":"remove","lines":["V"]}]}],[{"group":"doc","deltas":[{"start":{"row":16,"column":9},"end":{"row":16,"column":10},"action":"remove","lines":["V"]}]}],[{"group":"doc","deltas":[{"start":{"row":16,"column":9},"end":{"row":16,"column":10},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":16,"column":10},"end":{"row":16,"column":11},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":16,"column":11},"end":{"row":16,"column":12},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":16,"column":12},"end":{"row":16,"column":13},"action":"insert","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":16,"column":13},"end":{"row":16,"column":14},"action":"insert","lines":["/"]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1429396123751}